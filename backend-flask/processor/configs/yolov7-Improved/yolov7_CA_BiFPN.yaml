# YOLOv5 🚀 by YOLOAir, GPL-3.0 license
# parameters
nc: 2  # number of classes
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple

# anchors
anchors:
  - [12,16, 19,36, 40,28]  # P3/8
  - [36,75, 76,55, 72,146]  # P4/16
  - [142,110, 192,243, 459,401]  # P5/32

# yolov7 backbone
backbone:
  # [from, number, module, args]
  [[-1, 1, Conv, [32, 3, 1]],  # 0
   [-1, 1, Conv, [64, 3, 2]],  # 1-P1/2     320*320*64
   [-1, 1, Conv, [64, 3, 1]],
   [-1, 1, Conv, [128, 3, 2]],  # 3-P2/4    160*160*128

   [-1, 1, Conv, [64, 1, 1]],
   [-2, 1, Conv, [64, 1, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [[-1, -3, -5, -6], 1, Concat, [1]],
   [-1, 1, Conv, [256, 1, 1]],  # 11        Elan结构，通道数乘2，160*160*256     Elan结构就是通道数乘4

   [-1, 1, MP, []],                          #Maxpooling
   [-1, 1, Conv, [128, 1, 1]],
   [-3, 1, Conv, [128, 1, 1]],
   [-1, 1, Conv, [128, 3, 2]],
   [[-1, -3], 1, Concat, [1]],  # 16-P3/8    MP1下采样，尺寸变为80*80*256        通道数乘2，下采样尺度变为0.5

   [-1, 1, Conv, [128, 1, 1]],
   [-2, 1, Conv, [128, 1, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [[-1, -3, -5, -6], 1, Concat, [1]],
   [-1, 1, Conv, [512, 1, 1]],  # 24       Elan结构，通道数乘2，80*80*512
         
   [-1, 1, MP, []],
   [-1, 1, Conv, [256, 1, 1]],
   [-3, 1, Conv, [256, 1, 1]],
   [-1, 1, Conv, [256, 3, 2]],
   [[-1, -3], 1, Concat, [1]],  # 29-P4/16    MP1下采样，尺寸变为40*40*512

   [-1, 1, Conv, [256, 1, 1]],
   [-2, 1, Conv, [256, 1, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [[-1, -3, -5, -6], 1, Concat, [1]],
   [-1, 1, Conv, [1024, 1, 1]],  # 37         Elan结构，通道数乘2，40*40*1024
         
   [-1, 1, MP, []],
   [-1, 1, Conv, [512, 1, 1]],
   [-3, 1, Conv, [512, 1, 1]],
   [-1, 1, Conv, [512, 3, 2]],
   [[-1, -3], 1, Concat, [1]],  # 42-P5/32    MP1下采样，尺寸变为20*20*1024

   [-1, 1, Conv, [256, 1, 1]],
   [-2, 1, Conv, [256, 1, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [[-1, -3, -5, -6], 1, Concat, [1]],        #Elan结构，相加输出为输入的两倍
   [-1, 1, Conv, [1024, 1, 1]],  # 50        Elan结构，256乘4，20*20*1024
   [-1,1,CA,[1024]]                #加入CA注意力机制
  ]

# yolov7 head
head:
  [[-1, 1, SPPCSPC, [512]], # 51         SPPCSPC结构，通道数变为512，20*20*512
  
   [-1, 1, Conv, [256, 1, 1]],                              #20*20*256
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],              #上采样40*40*256
   [37, 1, Conv, [256, 1, 1]], # route backbone P4          #将37层的特征图，经过CBS，变为40*40*256
   [[-1, -2], 1, BiFPN_Add2, [256,256]],                    #相加，变为40*40*512                                   cat
   
   [-1, 1, Conv, [256, 1, 1]],
   [-2, 1, Conv, [256, 1, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [[-1, -2, -3, -4, -5, -6], 1, Concat, [1]],              #Elan-H模块，变为了40*40*1024
   [-1, 1, Conv, [256, 1, 1]], # 63                         40*40*256
   
   [-1, 1, Conv, [128, 1, 1]],                              #40*40*128
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],              #80*80*128
   [24, 1, Conv, [128, 1, 1]], # route backbone P3          #将24层的特征图80*80*512，变为80*80*128
   [[-1, -2], 1, BiFPN_Add2, [128,128]],                    #相加，变为80*80*256                                 cat
   
   [-1, 1, Conv, [128, 1, 1]],
   [-2, 1, Conv, [128, 1, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [-1, 1, Conv, [64, 3, 1]],
   [[-1, -2, -3, -4, -5, -6], 1, Concat, [1]],              # Elan结构，80*80*512
   [-1, 1, Conv, [128, 1, 1]], # 76                           80*80*128
      
   [-1, 1, MP, []],
   [-1, 1, Conv, [128, 1, 1]],                              #40*40*128
   [-3, 1, Conv, [128, 1, 1]],
   [-1, 1, Conv, [128, 3, 2]],                              #40*40*128
   #[[-1, -3, 64], 1, Concat, [1]],                          #MP2下采样，-1层和-3层输入相加为40*40*256，和64层40*40*256相加得40*40*512    cat
   [[-1, -3], 1, Concat, [1]],
   [[-1, 64], 1, BiFPN_Add2, [256,256]],

   [-1, 1, Conv, [256, 1, 1]],
   [-2, 1, Conv, [256, 1, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [-1, 1, Conv, [128, 3, 1]],
   [[-1, -2, -3, -4, -5, -6], 1, Concat, [1]],              #40*40*1024
   [-1, 1, Conv, [256, 1, 1]], # 89                         40*40*256
      
   [-1, 1, MP, []],                                        #20*20*256
   [-1, 1, Conv, [256, 1, 1]],                             #20*20*256
   [-3, 1, Conv, [256, 1, 1]],                             #40*40*256
   [-1, 1, Conv, [256, 3, 2]],                             #20*20*256
   #[[-1, -3, 52], 1, Concat, [1]],                         #MP2下采样，-1层和-3层输入相加为20*20*512，和52层20*20*512相加得20*20*1024     cat
   [[-1, -3], 1, Concat, [1]],
   [[-1, 52], 1, BiFPN_Add2, [512,512]],

   [-1, 1, Conv, [512, 1, 1]],
   [-2, 1, Conv, [512, 1, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [-1, 1, Conv, [256, 3, 1]],
   [[-1, -2, -3, -4, -5, -6], 1, Concat, [1]],            #ELan-H,20*20*2048
   [-1, 1, Conv, [512, 1, 1]], # 102                      20*20*512
   
   [76, 1, RepConv, [256, 3, 1]],                       #REPVGG+CONV 80*80*256
   [90, 1, RepConv, [512, 3, 1]],                       #40*40*512
   [103, 1, RepConv, [1024, 3, 1]],                     #20*20*1024

   [[104,105,106], 1, IAuxDetect, [nc, anchors]],   # Detect(P3, P4, P5)
  ]
